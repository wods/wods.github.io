<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[我是松哥]]></title>
  <link href="http://wods.github.io/atom.xml" rel="self"/>
  <link href="http://wods.github.io/"/>
  <updated>2014-08-21T14:44:42+08:00</updated>
  <id>http://wods.github.io/</id>
  <author>
    <name><![CDATA[松哥]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Memory leak of java.lang.ref.FinalizerReference on android]]></title>
    <link href="http://wods.github.io/blog/2014/08/21/memory-leak-ofjava-dot-lang-dot-ref-dot-finalizerreference-on-android/"/>
    <updated>2014-08-21T09:56:41+08:00</updated>
    <id>http://wods.github.io/blog/2014/08/21/memory-leak-ofjava-dot-lang-dot-ref-dot-finalizerreference-on-android</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;m working on a memory leak issue of Android.
By using &ldquo;Dump HPROF file&rdquo; tool in DDMS, I found some objects are retained by java.lang.ref.FinalizerReference. After some investgation, I found the reason.</p>

<p>We have an object A, and A have a reference to a activty B. A will be recreated during refresh, while B won&rsquo;t. And we have some code like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">A</span><span class="o">.</span><span class="na">B</span><span class="o">.</span><span class="na">runUiThread</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Even A is no longer needed, the system will still hold the reference to it.</p>

<p>The solution is simple.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Activity</span> <span class="n">lB</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="na">B</span><span class="o">;</span>
</span><span class='line'><span class="n">lB</span><span class="o">.</span><span class="na">runUiThread</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nexus 5使用SWP-SIM卡刷公交的小小的研究]]></title>
    <link href="http://wods.github.io/blog/2014/08/19/the-research-of-how-to-use-swp-sim-card-in-nexus-5/"/>
    <updated>2014-08-19T10:24:15+08:00</updated>
    <id>http://wods.github.io/blog/2014/08/19/the-research-of-how-to-use-swp-sim-card-in-nexus-5</id>
    <content type="html"><![CDATA[<p>首先给出结论。
4.4.3和4.4.4必须使用4.4.2的基带，并且修改配置文件后才能使用手机刷公交。</p>

<p>4.4.2基带的<a href="http://pan.baidu.com/share/link?shareid=96385327&amp;uk=1477253311">下载链接</a> 提取码: ts3i</p>

<p>4.4.3和4.4.4的修改文件在<a href="http://bbs.gfan.com/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=7257347&amp;pid=233665712">这里</a></p>

<p>4.4.2的修改文件在<a href="http://bbs.gfan.com/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=7257347&amp;pid=217798101">这里</a></p>

<p>修改方式就是将</p>

<p>\system\etc\libnfc-brcm-20791b05.conf</p>

<p>\system\etc\libnfc-brcm.conf</p>

<p>两个文件中关于UICC的部分启用。
APK文件是为了关屏也能刷卡，可以不刷。</p>

<p>最恼人的就是必须使用4.4.2的基带才可以实现，之前因为4.4.4的基带已经可以开启移动4G了，所以一直没动，烦恼了一周。</p>

<p><a href="http://www.nfcbrief.com/2013/07/think-twice-about-buying-nexus-if-you.html">这篇文章</a>详细的介绍了Nexus系列为什么不能直接使用NFC-SIM。</p>

<p>“Access to the SIM requires special adaptations in the baseband firmware (plain APDU access), ”</p>

<p>读取SIM卡中的SE（NFC中的安全模块，NFC-SIM卡就是在SIM卡中，N5默认读的是机器中的SE）需要基带的支持，而在4.4.3中这一步被限制了，无法直接读取，所以必须使用4.4.2的基带才可以。</p>

<p>文章中还提到第三方已经尝试将读取SIM卡中的SE代码提交给Google，可惜一直没有人回复，而4.4.3中又做了进一步限制，感觉Google很不乐意接受SE在SIM卡中的解决方案，前景有些悲观。</p>

<p>再补充下为什么不能使用和包，这篇英文也讲到了，使用和包需要支持SIM Alliance Open Mobile API，厂商一般都是通过直接集成seek for android代码来支持。而N5没有集成，也就不能支持。</p>

<p>我在stackoverflow上看到已经有人尝试给集成代码N5，感觉最大的问题还是如何访问sim卡。不过n5已经支持直接读取sim卡上的se，说不定还真可以使用seek for android</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[test]]></title>
    <link href="http://wods.github.io/blog/2014/08/18/test/"/>
    <updated>2014-08-18T17:51:05+08:00</updated>
    <id>http://wods.github.io/blog/2014/08/18/test</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
